/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as StudiesIndexImport } from './routes/studies/index'
import { Route as MembersIndexImport } from './routes/members/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as StudiesMeImport } from './routes/studies/me'
import { Route as StudiesApproveImport } from './routes/studies/approve'
import { Route as StudiesAcceptImport } from './routes/studies/accept'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const StudiesIndexRoute = StudiesIndexImport.update({
  path: '/studies/',
  getParentRoute: () => rootRoute,
} as any)

const MembersIndexRoute = MembersIndexImport.update({
  path: '/members/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  path: '/dashboard/',
  getParentRoute: () => rootRoute,
} as any)

const StudiesMeRoute = StudiesMeImport.update({
  path: '/studies/me',
  getParentRoute: () => rootRoute,
} as any)

const StudiesApproveRoute = StudiesApproveImport.update({
  path: '/studies/approve',
  getParentRoute: () => rootRoute,
} as any)

const StudiesAcceptRoute = StudiesAcceptImport.update({
  path: '/studies/accept',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/studies/accept': {
      id: '/studies/accept'
      path: '/studies/accept'
      fullPath: '/studies/accept'
      preLoaderRoute: typeof StudiesAcceptImport
      parentRoute: typeof rootRoute
    }
    '/studies/approve': {
      id: '/studies/approve'
      path: '/studies/approve'
      fullPath: '/studies/approve'
      preLoaderRoute: typeof StudiesApproveImport
      parentRoute: typeof rootRoute
    }
    '/studies/me': {
      id: '/studies/me'
      path: '/studies/me'
      fullPath: '/studies/me'
      preLoaderRoute: typeof StudiesMeImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof rootRoute
    }
    '/members/': {
      id: '/members/'
      path: '/members'
      fullPath: '/members'
      preLoaderRoute: typeof MembersIndexImport
      parentRoute: typeof rootRoute
    }
    '/studies/': {
      id: '/studies/'
      path: '/studies'
      fullPath: '/studies'
      preLoaderRoute: typeof StudiesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  StudiesAcceptRoute,
  StudiesApproveRoute,
  StudiesMeRoute,
  DashboardIndexRoute,
  MembersIndexRoute,
  StudiesIndexRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/studies/accept",
        "/studies/approve",
        "/studies/me",
        "/dashboard/",
        "/members/",
        "/studies/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/studies/accept": {
      "filePath": "studies/accept.tsx"
    },
    "/studies/approve": {
      "filePath": "studies/approve.tsx"
    },
    "/studies/me": {
      "filePath": "studies/me.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx"
    },
    "/members/": {
      "filePath": "members/index.tsx"
    },
    "/studies/": {
      "filePath": "studies/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
